---
# Role to deploy an Okapi server from source to a Debian Jessie box
- name: Install prereqs
  become: yes
  apt: name={{ item }} state=present
  with_items:
    - git
    - curl

- name: Clone Okapi repository
  become: yes
  git: repo=https://github.com/folio-org/okapi.git dest={{ okapi_src_home }}
  register: okapi_clone

- name: Force Maven build if repository updated
  file: path={{ okapi_src_home }}/install.log state=absent
  when: okapi_clone.changed

- name: Check if Okapi core is running
  command: pgrep -f okapi-core-fat
  register: okapi_check
  ignore_errors: yes
  changed_when: no

- name: Kill Okapi if repository updated
  become: yes
  command: kill {{ okapi_check.stdout }}
  when: okapi_check.stdout and okapi_clone.changed

- name: Build Okapi
  become: yes
  shell: /usr/bin/mvn -q clean install > install.log
  args:
    chdir: "{{ okapi_src_home }}"
    creates: "{{ okapi_src_home }}/install.log"  

- name: Set up Okapi home directory
  become: yes
  file: state=directory path={{ item }}
  with_items:
    - /opt/okapi/lib
    - /opt/okapi/conf
    - /opt/okapi/logs

- name: Link in Okapi jar
  become: yes
  file: state=link src={{ okapi_src_home }}/okapi-core/target/okapi-core-fat.jar path={{ okapi_home }}/lib/okapi-core-fat.jar

- name: Check if Okapi core is running
  command: pgrep -f okapi-core-fat
  register: okapi_check
  ignore_errors: yes
  changed_when: no

- name: Launch okapi-core
  become: yes
  shell: nohup java -Dloglevel=DEBUG -jar {{ okapi_home }}/lib/okapi-core-fat.jar dev > {{ okapi_home }}/logs/okapi.log &
  when: okapi_check.stdout == ''
  register: okapi_launch

- name: Give Okapi a chance to spin up
  pause: seconds=5
  when: okapi_launch.changed == true
