---
# Role to build and deploy folio-sample-modules from source
# Note: temporarily set update=no to allow simple-vertx build to work
- name: Clone folio-sample-modules repository
  git: repo=https://github.com/folio-org/folio-sample-modules.git dest={{ folio_sample_modules_src_home }} update=no
  register: folio_sample_modules_clone

- name: Force Maven build if repository updated
  file: path={{ folio_sample_modules_src_home }}/{{ item }}/install.log state=absent
  with_items:
    - hello-vertx
    - simple-vertx
  when: folio_sample_modules_clone.changed

- name: Remove sample modules for tenant if repository updated
  uri:
    url: http://localhost:9130/_/proxy/tenants/testlib/modules/{{ item }}
    method: DELETE
    status_code: 204, 404
  with_items:
    - hello
    - simple
  when: folio_sample_modules_clone.changed 

- name: Undeploy sample modules if repo updated
  uri:
    url: http://localhost:9130/_/discovery/modules/{{ item }}
    method: DELETE
    status_code: 204, 404
  with_items:
    - hello
    - simple
  when: folio_sample_modules_clone.changed 

- name: Unregister sample modules if repo updated
  uri:
    url: http://localhost:9130/_/proxy/modules/{{ item }}
    method: DELETE
    status_code: 204, 404
  with_items:
    - hello
    - simple
  when: folio_sample_modules_clone.changed 

# Temporary hack to simple-vertx pom.xml
- name: Update simple-vertx pom.xml
  copy: src=simple-vertx-pom.xml dest={{ folio_sample_modules_src_home }}/simple-vertx/pom.xml backup=yes

- name: Build Java sample modules
  shell: /usr/bin/mvn -q clean install > install.log
  args:
    chdir: "{{ folio_sample_modules_src_home }}/{{ item }}"
    creates: "{{ folio_sample_modules_src_home }}/{{ item }}/install.log"
  with_items:
    - hello-vertx
    - simple-vertx

- name: Check sample module registration
  uri:
    url: http://localhost:9130/_/proxy/modules/{{ item }}
    status_code: 200, 404
  register: sample_reg_status
  with_items:
    - hello
    - simple

- name: Register sample modules
  uri:
    url: http://localhost:9130/_/proxy/modules
    method: POST
    body_format: json
    body: "{{ lookup('template', item.template) }}"
    status_code: 201
  when: sample_reg_status.results[item.index].status == 404
  with_items:
    - { template: ModuleDescriptor-hello-vertx.json.j2, index: 0 }
    - { template: ModuleDescriptor-simple-vertx.json.j2, index: 1 }

- name: Check sample module deployment
  uri:
    url: http://localhost:9130/_/discovery/modules/{{ item }}
    status_code: 200, 404
  register: sample_deploy_status
  with_items:
    - hello
    - simple

- name: Deploy sample modules
  uri:
    url: http://localhost:9130/_/discovery/modules
    method: POST
    body_format: json
    body: '{ "srvcId" : "{{ item.module }}", "nodeId" : "localhost" }'
    status_code: 201
  when: sample_deploy_status.results[item.index].status == 404
  with_items:
    - { module: hello, index: 0 }
    - { module: simple, index: 1 }

- name: Enable sample modules for testlib tenant
  uri:
    url: http://localhost:9130/_/proxy/tenants/testlib/modules
    method: POST
    body_format: json
    body: '{ "id" : "{{ item }}" }'
  with_items:
    - hello
    - simple
